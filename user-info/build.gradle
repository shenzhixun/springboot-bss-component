buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.ejet'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {

    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude(module:'spring-boot-starter-tomcat')
    }
    compile('org.springframework.boot:spring-boot-starter-aop')

    compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2') {
        exclude(module:'spring-boot-starter-logging')
        exclude(module:'log4j-over-slf4j:org.slf4j')
    }
    compile('org.springframework.boot:spring-boot-starter-tomcat')
    //
    compile('org.springframework:spring-context-support')

    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0' //<!-- servlet 依赖包 -->
    compile group: 'com.alibaba', name: 'druid', version: '1.1.10'//  <!-- Druid 数据连接池依赖 -->
    //compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '1.3.0'
    compile group: 'com.github.pagehelper', name: 'pagehelper', version: '5.0.4'//<!-- 分页插件 -->
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'//<!-- gson -->
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.40'//<!-- json -->

    compile('net.sf.json-lib:json-lib:2.4:jdk15')

    compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.6'//<!-- MySQL 连接驱动依赖 -->
    // 依赖模块
    compile fileTree(dir: '../libs', include: ['comm-utils_main.jar'])
    compile fileTree(dir: '../libs', include: ['comm-result_main.jar'])
    compile fileTree(dir: '../libs', include: ['comm-web_main.jar'])
    compile fileTree(dir: '../libs', include: ['comm-web-redis_main.jar'])


    //user-info必须包含jwt包，进行token认证
    compile 'io.jsonwebtoken:jjwt-api:0.10.5'
    runtime 'io.jsonwebtoken:jjwt-impl:0.10.5',
    // Uncomment the next line if you want to use RSASSA-PSS (PS256, PS384, PS512) algorithms:
    //'org.bouncycastle:bcprov-jdk15on:1.60',
    'io.jsonwebtoken:jjwt-jackson:0.10.5'


    testImplementation('org.springframework.boot:spring-boot-starter-test')
}
